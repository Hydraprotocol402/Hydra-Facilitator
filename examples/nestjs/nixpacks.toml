[phases.setup]
nixPkgs = ['nodejs_20', 'npm-9_x', 'openssl']

[phases.install]
cmds = [
  'npm install -g pnpm',
  'set -e && BUILD_ROOT="" && if [ -f /app/../../package.json ] && [ -f /app/../../pnpm-workspace.yaml ]; then BUILD_ROOT="/app/../.."; echo "Found repo root at $BUILD_ROOT (relative path)"; elif [ -f /app/../package.json ] && [ -f /app/../pnpm-workspace.yaml ]; then BUILD_ROOT="/app/.."; echo "Found repo root at $BUILD_ROOT (relative path)"; else echo "Searching for repository in /artifacts..."; WORKSPACE_FILE=$(find /artifacts -name "pnpm-workspace.yaml" -type f 2>/dev/null | head -1); if [ -n "$WORKSPACE_FILE" ]; then BUILD_ROOT=$(dirname "$WORKSPACE_FILE"); echo "Found repo root at $BUILD_ROOT (from artifacts)"; else echo "ERROR: Cannot find repository root"; echo "Configure Coolify to use repository root as build context"; exit 1; fi; fi && if [ ! -f "$BUILD_ROOT/package.json" ]; then echo "ERROR: Missing package.json in $BUILD_ROOT"; exit 1; fi && echo "Installing dependencies from $BUILD_ROOT..." && cd "$BUILD_ROOT" && npx pnpm install',
]

[phases.build]
cmds = [
  'set -e && ROOT_DIR="" && if [ -f /app/../../package.json ] && [ -f /app/../../pnpm-workspace.yaml ]; then ROOT_DIR="/app/../.."; echo "Found repo root at $ROOT_DIR"; elif [ -f /app/../package.json ] && [ -f /app/../pnpm-workspace.yaml ]; then ROOT_DIR="/app/.."; echo "Found repo root at $ROOT_DIR"; else echo "Searching /artifacts..."; WORKSPACE_FILE=$(find /artifacts -name "pnpm-workspace.yaml" -type f 2>/dev/null | head -1); if [ -n "$WORKSPACE_FILE" ]; then ROOT_DIR=$(dirname "$WORKSPACE_FILE"); echo "Found repo root at $ROOT_DIR"; else echo "ERROR: Cannot find repository root"; exit 1; fi; fi && if [ ! -f "$ROOT_DIR/package.json" ]; then echo "ERROR: Missing package.json"; exit 1; fi && echo "Building root package..." && cd "$ROOT_DIR" && npx pnpm build && echo "Building NestJS app..." && cd examples/nestjs && npx pnpm build && echo "Build complete"',
]

[start]
cmd = "node dist/main.js"
